---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenbin.
--- DateTime: 18/12/12 17:18
---
--======================================================
--======================================================
-- 各种队列处理
buildQueue = {
    build = {}, -- 建筑队列
    ship = {}, -- 兵队列
    tech = {}, -- 科技队列
}
---@param b dbbuilding
buildQueue.removeBuildQueue = function(b)
    ---@type dbbuilding
    local building
    for i, cor in ipairs(buildQueue.build) do
        building = cor.param
        if building:get_idx() == b:get_idx() then
            timerEx.cancel(cor) --取消timer
            table.remove(buildQueue.build, i)
            break
        end
    end
end

---@public 加入建筑队列
---@param b dbbuilding
buildQueue.addBuildQueue = function(b, callback)
    local endtime = b:get_endtime()
    local diff = endtime - dateEx.nowMS()
    local cor = timerEx.new(diff / 1000, callback, b)
    table.insert(buildQueue.build, cor)
end

---@public 加入造兵队列
---@param b dbbuilding
buildQueue.addShipQueue = function(b, seconds, callback)
    if b:get_state() ~= IDConstVals.BuildingState.working then
        buildQueue.removeShipQueue(b)
        return
    end
    local roleAttrId = b:get_val()
    local num = b:get_val2()
    if num <= 0 then
        buildQueue.removeShipQueue(b)
        return
    end

    local cor = timerEx.new(seconds, callback, b)
    buildQueue.ship[b:get_idx()] = cor
end

---@param b dbbuilding
buildQueue.removeShipQueue = function(b)
    local cor = buildQueue.ship[b:get_idx()]
    if cor then
        timerEx.cancel(cor) --取消timer
    end
    buildQueue.ship[b:get_idx()] = nil
end

buildQueue.release = function()
    for i, v in ipairs(buildQueue.build) do
        timerEx.cancel(v)
    end
    buildQueue.build = {}

    for i, v in ipairs(buildQueue.ship) do
        timerEx.cancel(v)
    end
    buildQueue.ship = {}
    for i, v in ipairs(buildQueue.tech) do
        timerEx.cancel(v)
    end
    buildQueue.tech = {}
end

return buildQueue
