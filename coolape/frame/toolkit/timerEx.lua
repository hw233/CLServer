---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenbin.
--- DateTime: 18/9/15 12:04

---
---@class Coroutine 携程
---@field param any 回调参数
---@field func any 定时器执行的函数
---@field sec number 秒为单位，可以是小数
local Coroutine = {}
function Coroutine.cancel() 
end

local skynet = require "skynet"
local numEx = require("numEx")

---@class timerEx
timerEx = {}

---public 新建定时器
---@param sec 秒为单位，可以是小数
---@param func 定时器执行的函数
---@param param 回调参数
---@return Coroutine
timerEx.new = function(sec, func, param)
    if sec < 0 then
        sec = 0
    end
    local coroutine = {}
    coroutine.param = param
    coroutine.func = func
    coroutine.cb = function()
        if coroutine.func then
            coroutine.func(coroutine.param, coroutine)
        end
    end
    coroutine.cancel = function()
        coroutine.func = nil
    end

    --将当前 coroutine 挂起 ti 个单位时间。一个单位是 1/100 秒
    local ti = sec * 100
    skynet.timeout(numEx.getIntPart(ti), coroutine.cb)
    return coroutine
end

---public 取消定时器
---@param coroutine
timerEx.cancel = function(coroutine)
    if coroutine == nil then
        return
    end
    coroutine.cancel()
end

return timerEx
