-- include "config.path"
-- cd into  ./CLServer first
projectDesc="CLFrame"
skynetRoot = "./skynet/"
coolapeRoot = "./coolape/"
projectRoot = "./coolape/"
projectName = "frame"
projectPath = projectRoot .. projectName .."/"

luaservice = skynetRoot .."service/?.lua;"
    ..coolapeRoot.."frame/service/?.lua;"
    ..coolapeRoot.."frame/manager/?.lua;"
lualoader = skynetRoot .. "lualib/loader.lua"
lua_path = skynetRoot .. "lualib/?.lua;"
    ..skynetRoot.."lualib/?/init.lua;"
    ..coolapeRoot.."frame/bio/?.lua;"
    ..coolapeRoot.."frame/public/?.lua;"
    ..coolapeRoot.."frame/toolkit/?.lua;"
    ..coolapeRoot.."frame/json/?.lua;"
    ..coolapeRoot.."frame/?.lua;"
    ..projectPath .. "?.lua;"

lua_cpath = skynetRoot .. "luaclib/?.so"
-- snax = root.."examples/?.lua;"..root.."test/?.lua"
cpath = skynetRoot.."cservice/?.so"

-- preload = "./examples/preload.lua"	-- run preload.lua before every lua service run
thread = 1
--logLev:日志等级  debug, warning, error
logLev = "debug"
--logger = coolapeRoot .. "logs/error_" .. projectName .. ".log"
--logger = nil
logpath = "."
harbor = 0
consolePort = 8000
httpPort = 8800
-- address = "127.0.0.1:2526"
-- master = "127.0.0.1:2017"
-- standalone = "0.0.0.0:2017"
start = "CLmain"	-- main script
bootstrap = "snlua bootstrap"	-- The service for bootstrap
-- snax_interface_g = "snax_g"
-- daemon = "./skynet.pid"
